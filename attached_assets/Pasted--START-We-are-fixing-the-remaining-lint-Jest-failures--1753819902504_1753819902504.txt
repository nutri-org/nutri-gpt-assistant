####################  START  ####################
We are fixing the remaining lint + Jest failures.  
Follow every step **exactly**; do NOT commit or push – I’ll do that manually.

────────────────────────────────────────
STEP 1 – server export
────────────────────────────────────────
File: server/server.js
  a. Directly after you create the Express app, add:

     const PORT = process.env.PORT || 3000;

  b. Replace the existing export / listen block with:

     // In tests we only need the app; in production we also start a listener.
     if (require.main === module) {
       app.listen(PORT, () => console.log(`Server listening on ${PORT}`));
     }
     module.exports = app;

  ►  **Result**: `require('../server/server')` returns an Express *app* – no server object.

────────────────────────────────────────
STEP 2 – update tests to use that app
────────────────────────────────────────
2‑A  tests/health.test.js  
  • Change the import line to  
    `const app = require('../server/server');`  
  • Nothing else changes.

2‑B  tests/auth.test.js  
  • Same import change:  
    `const app = require('../server/server');`  
  • Remove the `require('jsonwebtoken')` timeout workaround – we now initialize the token once:  

    ```js
    const secret   = process.env.JWT_SECRET;
    const goodToken = jwt.sign({ id: 'u1', plan: 'free' }, secret);
    ```

  • Replace `.post('/api/chat')` lines with **await**ed requests and use `Bearer ${goodToken}`.  
  • At the very bottom add:  

    ```js
    afterAll(() => jest.clearAllMocks());
    ```

2‑C  tests/chat.test.js  
  • Same import change (`const app = require('../server/server');`).  
  • Add near the top (after the other requires):

    ```js
    const secret    = process.env.JWT_SECRET;
    const goodToken = jwt.sign({ id: 'u1', plan: 'free' }, secret);
    ```

  • Delete the now‑unused `server` and `authHdr` variables (this fixes the ESLint “unused” errors).  
  • Everywhere we previously used `'Bearer test-secret-token'` change to `` `Bearer ${goodToken}` ``.  
  • Make sure **every** SuperTest call is `await`ed (they already are, but double‑check).  

────────────────────────────────────────
STEP 3 – jest.setup.js
────────────────────────────────────────
Keep the two lines we already have **and** the timeout:

```js
process.env.JWT_SECRET = process.env.JWT_SECRET || 'test_secret';
jest.setTimeout(15000);
