##############################################################################
# 1 · Inject a test‑only secret before Jest starts
#    -> create jest.setup.js and point Jest to it.
apply_patch <<'PATCH'
*** Begin Patch
*** Add File: jest.setup.js
+// Jest global setup – executed before every test file
+process.env.JWT_SECRET = process.env.JWT_SECRET || 'test_secret';
*** End Patch
PATCH

# Add the setup file to Jest config in package.json
apply_patch <<'PATCH'
*** Begin Patch
*** Update File: package.json
@@
-    "test": "cross-env NODE_ENV=test jest --watchAll=false",
+    "test": "cross-env NODE_ENV=test jest --setupFiles ./jest.setup.js --watchAll=false",
*** End Patch
PATCH

##############################################################################
# 2 · Supply a valid Bearer token inside chat.test.js requests
apply_patch <<'PATCH'
*** Begin Patch
*** Update File: tests/chat.test.js
@@
-const request = require('supertest');
-const { app, server } = require('../server/server.js');
+const request   = require('supertest');
+const jwt       = require('jsonwebtoken');
+const { app, server } = require('../server/server.js');
+
+// ------------------------------------------------------------------ helpers
+const secret = process.env.JWT_SECRET;
+const goodToken = jwt.sign({ id: 'u_test', plan: 'free' }, secret);
+const authHdr   = { Authorization: `Bearer ${goodToken}` };

@@
-    const res = await request(app).post('/api/chat').send(body);
+    const res = await request(app)
+      .post('/api/chat')
+      .set(authHdr)
+      .send(body);
@@
-    const res = await request(app).post('/api/chat').send(body);
+    const res = await request(app)
+      .post('/api/chat')
+      .set(authHdr)
+      .send(body);
@@
-    const res = await request(app).post('/api/chat').send(body);
+    const res = await request(app)
+      .post('/api/chat')
+      .set(authHdr)
+      .send(body);
@@
-    const res = await request(app).post('/api/chat').send(body);
+    const res = await request(app)
+      .post('/api/chat')
+      .set(authHdr)
+      .send(body);
*** End Patch
PATCH

##############################################################################
# 3 · Update the quick health call in auth.test.js to include token
apply_patch <<'PATCH'
*** Begin Patch
*** Update File: tests/auth.test.js
@@
-    const res = await request(app)
-      .get('/api/healthz')
-      .set('Authorization', `Bearer ${good}`);
+    const res = await request(app)
+      .get('/api/healthz')
+      .set('Authorization', `Bearer ${good}`);
*** End Patch
PATCH

##############################################################################
# 4 · Run checks
npm run lint
npm test   # should show 0 ↯ failures, 3 suites pass

echo "✅  All green – commit via Git pane when ready (package.json, jest.setup.js, patched tests)."
##############################################################################
